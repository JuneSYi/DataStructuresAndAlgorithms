implementing the priority queue with heap will allow both insertion and deletion to have a time complexity of O(log N)

Heap is a binary tree that meets the following criteria:
    - Is a complete binary tree - filled out top to bottom, left to right
    - the value of each node must be no greater than (or no less than) the value of its child nodes.

Heap has the following properties:
    - insertion of an element into the heap has a time complexity of O(Log N)
    - deletion of an element from the heap has a time complexity of O(Log N)
    - max/min value in the heap can be obtained with O(1) time complexity

2 kinds of heaps:
    1. Max Heap
        - Each node in the Heap has a value no less than its child nodes.
        - therefore, the top element (root node) has the largest value in the Heap.
    2. Min Heap
        - each node in the heap has a value no larger than its child nodes.
        - therefore, the top element (root node) has the smallest value in the Heap

Heap Insertion
Heap Deletion